
from eda.matriz_correlacion import calcular_matriz_correlacion
from eda.vif import calcular_vif
from eda.box_tidwell import calcular_box_tidwell
from eda.distribucion import generar_grafico_distribucion
from tools.menu import seleccionar_opcion
from src.data.io_utils import cargar_dataset
from utils.data_utils import eliminar_columnas


def analizar_dataset(carpeta, archivo):
    """Permite realizar an√°lisis sobre un dataset seleccionado."""
    menu_analisis = {
        "1": "Calcular matriz de correlaci√≥n",
        "2": "Calcular VIF (Factor de Inflaci√≥n de Varianza)",
        "3": "Generar gr√°fico de distribuci√≥n"
    }
    ruta = f"data/processed/{carpeta}/{archivo}"
    df = cargar_dataset(ruta)

    while True:
        print("\nüîç Columnas disponibles en el dataset:")
        for i, col in enumerate(df.columns, 1):
            print(f"{i}. {col}")

        print("\nSi deseas eliminar una columna, ingresa su n√∫mero.")
        print("Si no deseas eliminar m√°s columnas, ingresa 0.")

        try:
            opcion = int(input("\nüëâ Selecciona una opci√≥n: ").strip())
            if opcion == 0:
                print("‚úÖ Finalizando la eliminaci√≥n de columnas.")
                break
            elif 1 <= opcion <= len(df.columns):
                col_a_eliminar = df.columns[opcion - 1]
                df = eliminar_columnas(df, [col_a_eliminar])
                print(f"‚úÖ Columna '{col_a_eliminar}' eliminada.")
            else:
                print("‚ùå Opci√≥n no v√°lida. Intenta de nuevo.")
        except ValueError:
            print("‚ùå Ingresa un n√∫mero v√°lido.")

    while True:
        opcion = seleccionar_opcion(menu_analisis, "An√°lisis disponibles")
        if opcion == "Calcular matriz de correlaci√≥n":
            
            if df is not None:
                calcular_matriz_correlacion(df, graficar=True)

        elif opcion == "Calcular VIF (Factor de Inflaci√≥n de Varianza)":
            
            if df is not None:
                vif = calcular_vif(df)
                print("\nüîç VIF calculado:")
                print(vif)

        elif opcion == "Generar gr√°fico de distribuci√≥n":
            if df is not None:
                generar_grafico_distribucion(df, carpeta, archivo)

        elif opcion is None:
            print("üîô Volviendo al men√∫ principal.")
            break